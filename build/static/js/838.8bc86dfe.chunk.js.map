{"version":3,"file":"static/js/838.8bc86dfe.chunk.js","mappings":"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","sources":["docs/pages/fonts/rendering.js","docs/components/sidebar.js","docs/components/codeblock.js","docs/components/image-viewer.js","docs/components/doc-topbar.js"],"sourcesContent":["// THIS FILE HAS BEEN AUTOMATICALLY GENERATED AND IS NOT INTENDED TO BE READ\nimport React from \"react\";\nimport '../../Docs.css';\nimport Footer from \"../../../components/footer\";\nimport DocTopbar from \"../../components/doc-topbar\";\nimport CodeBlock from \"../../components/codeblock\";\nimport ImageViewer from \"../../components/image-viewer\";\nimport Sidebar from \"../../components/sidebar\";\nimport '../../flavours/note.css';\nimport '../../flavours/warn.css';\nimport '../../flavours/important.css';\nimport sidebarInfo from \"../../sidebar-info\";\nimport \"../../../css/sidebar.css\";\nconst File = () => {\n  return (\n    <div className=\"Docs\">\n      <title>Docs | OSGL</title>\n      <DocTopbar />\n      \n      <div className=\"sidebar-content\">\n        <Sidebar sections={sidebarInfo} />\n      </div>\n      <div className=\"doc-content\">{/* This file was automatically-generated */}\n\n<h1 className=\"doc-header\">Rendering fonts</h1>\n<div className=\"doc-header-line\"></div><p className=\"doc-paragraph\">You can draw a font onto a <code>DrawableObject</code> via the <code>Draw</code> function:</p><CodeBlock code={`local OSGL = require(path.to.osgl)\nlocal Window = OSGL.Window\nlocal Font = OSGL.Font\n\nlocal WIDTH = 800\nlocal HEIGHT = 600\n\n-- Create a new window\nlocal myWindow = Window.from(parent, WIDTH, HEIGHT):Unwrap()\n\n-- Load a font\nlocal fnt = Font.from(fontData)\nfnt:Draw(\"Hello, World!\", 1, 1)`}></CodeBlock><p className=\"doc-paragraph\">In this example, the text \"Hello, World!\" will be rendered at the coordinates (1, 1) on the window.</p>\n      <div style={{ height: \"55px\" }} />\n</div>\n      <Footer />\n      <div className=\"grid-background-dark\"></div>\n    </div>\n  );\n};\n\nexport default File;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Sidebar = ({ sections }) => {\r\n  const [openSections, setOpenSections] = useState({});\r\n  const [animationStates, setAnimationStates] = useState({});\r\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n  useEffect(() => {\r\n    const handleLocationChange = () => {\r\n      setCurrentPath(window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener('popstate', handleLocationChange);\r\n    return () => window.removeEventListener('popstate', handleLocationChange);\r\n  }, []);\r\n\r\n  const toggleSection = (section) => {\r\n    if (openSections[section]) {\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-out' }));\r\n      setTimeout(() => {\r\n        setOpenSections((prev) => ({ ...prev, [section]: false }));\r\n        setAnimationStates((prev) => ({ ...prev, [section]: '' }));\r\n      }, 300);\r\n    } else {\r\n      setOpenSections((prev) => ({ ...prev, [section]: true }));\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-in' }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {sections.map((section, index) => {\r\n        const isSectionActive = currentPath.startsWith(`/${section.id}`);\r\n        return (\r\n          <div key={index} className=\"sidebar-section\">\r\n            <div \r\n              className=\"section-header\" \r\n              onClick={() => toggleSection(section.title)}\r\n            >\r\n              <span style={{ color: isSectionActive ? '#446EE4' : 'white' }}>\r\n                {section.title}\r\n              </span>\r\n              <span \r\n                className=\"toggle-icon\" \r\n                style={{ transform: openSections[section.title] ? 'rotate(90deg)' : 'rotate(0deg)' }}\r\n              >\r\n                â–º\r\n              </span>\r\n            </div>\r\n\r\n            {openSections[section.title] && (\r\n              <div className={`sub-sections ${animationStates[section.title]}`}>\r\n                {section.links.map((link, linkIndex) => {\r\n                  const isLinkActive = currentPath === link.href;\r\n                  return (\r\n                    <a \r\n                      key={linkIndex} \r\n                      href={link.href} \r\n                      className=\"sub-section-link\"\r\n                      style={{ \r\n                        animationDelay: `${linkIndex * 0.1}s`,\r\n                        color: isLinkActive ? '#446EE4' : '#c2c7d6',\r\n                      }}\r\n                    >\r\n                      {link.text}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/github-dark.css\";\r\nimport '../Docs.css'; // Import your CSS file\r\n\r\nconst CodeBlock = ({ code, language = \"lua\", filename }) => {\r\n    useEffect(() => {\r\n        hljs.registerLanguage('lua', require('highlight.js/lib/languages/lua'));\r\n    }, []);\r\n\r\n    const [copied, setCopied] = useState(false);\r\n    const codeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (codeRef.current) {\r\n            hljs.highlightElement(codeRef.current);\r\n        }\r\n    }, [code]);\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(code)\r\n            .then(() => {\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), 1500);\r\n            })\r\n            .catch(err => console.error(\"Copy failed:\", err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-block-container\">\r\n            {filename && (\r\n                <div className=\"filename\">\r\n                    <p className=\"doc-paragraph\">{filename}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Code block */}\r\n            <pre className=\"code-block\">\r\n                <code ref={codeRef} className={`language-${language}`}>\r\n                    {code}\r\n                </code>\r\n            </pre>\r\n\r\n            {/* Copy button */}\r\n            <button \r\n                className={`copy-btn ${copied ? \"copied\" : \"\"}`}\r\n                onClick={copyToClipboard}\r\n            >\r\n                {copied ? \"Copied!\" : \"Copy\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeBlock;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ImageViewer = ({ src, alt = \"Image\", className = \"\" }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Delay adding \"visible\" class for fade-in effect\r\n            setTimeout(() => setIsVisible(true), 10);\r\n        } else {\r\n            // Start fade-out animation\r\n            setIsVisible(false);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            if (e.key === \"Escape\") closeLightbox();\r\n        };\r\n        document.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setIsVisible(false); // Start fade-out animation\r\n        setTimeout(() => setIsOpen(false), 300); // Wait for animation to finish before removing from DOM\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Small Image */}\r\n            <img \r\n                src={\"/osgl\" + src} \r\n                alt={alt} \r\n                className={`image-thumbnail ${className}`}\r\n                onClick={() => setIsOpen(true)}\r\n            />\r\n\r\n            {/* Fullscreen Lightbox */}\r\n            {isOpen && (\r\n                <div className={`image-overlay ${isVisible ? \"visible\" : \"\"}`} onClick={closeLightbox}>\r\n                    <div className={`image-container ${isVisible ? \"visible\" : \"\"}`} onClick={(e) => e.stopPropagation()}>\r\n                        {/* Close Button */}\r\n                        <button className=\"close-button\" onClick={closeLightbox}>âœ•</button>\r\n\r\n                        {/* Enlarged Image */}\r\n                        <img src={\"/osgl\" + src} alt={alt} className=\"enlarged-image\" />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageViewer;","import React from \"react\";\r\nimport TopbarButton from \"../../components/topbar-button\";\r\nimport TopbarOneWayButton from \"../../components/topbar-one-way-button\";\r\n\r\nconst DocTopbar = () => {\r\n    return <div className=\"topbar\" style={{height: \"55px\", position: \"fixed\" }}>\r\n        <TopbarOneWayButton name=\"logo\" link=\"/osgl\" />\r\n\r\n        <div className=\"docs-sig\">\r\n            <img\r\n                src=\"/osgl/docs-colour.png\"\r\n                alt=\"docs\"\r\n                className=\"docs-img\"\r\n            />\r\n        </div>\r\n\r\n        <img src=\"/osgl/logo-sep.png\" alt=\"Separator\" className=\"seperator-img\" style={{marginLeft: \"75px\"}} />\r\n\r\n        <TopbarButton name=\"api\" link=\"/osgl/api\" />\r\n        <TopbarButton name=\"github\" link=\"https://github.com/osgl-rbx/osgl/\" />\r\n    </div>\r\n}\r\n\r\nexport default DocTopbar;"],"names":["File","_jsxs","className","children","_jsx","DocTopbar","Sidebar","sections","sidebarInfo","CodeBlock","code","style","height","Footer","_ref","openSections","setOpenSections","useState","animationStates","setAnimationStates","currentPath","setCurrentPath","window","location","pathname","useEffect","handleLocationChange","addEventListener","removeEventListener","map","section","index","isSectionActive","startsWith","id","onClick","prev","setTimeout","toggleSection","title","color","transform","links","link","linkIndex","isLinkActive","href","animationDelay","text","language","filename","hljs","registerLanguage","require","copied","setCopied","codeRef","useRef","current","highlightElement","ref","copyToClipboard","navigator","clipboard","writeText","then","catch","err","console","error","src","alt","isOpen","setIsOpen","isVisible","setIsVisible","handleKeyDown","e","key","closeLightbox","document","_Fragment","stopPropagation","position","TopbarOneWayButton","name","marginLeft","TopbarButton"],"sourceRoot":""}