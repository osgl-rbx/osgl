{"version":3,"file":"static/js/444.2dc0846e.chunk.js","mappings":"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","sources":["api/components/type-highlighter.js","api/components/api-type.js","api/pages/font.js"],"sourcesContent":["import React from \"react\";\r\nimport { highlightType } from \"./function-highlighter\";\r\n\r\nconst SyntaxHighlighter = ({ name, definition }) => {\r\n  const highlightSyntax = (code) => {\r\n    return code\r\n      .replace(/\\b(type)\\b/g, '<span class=\"keyword\">$1</span>')\r\n      .replace(/(--.*)$/gm, '<span class=\"comment\">$1</span>');\r\n  };\r\n\r\n  const highlightTypeDefinition = (typeDef) => {\r\n    const parts = typeDef.split(/([&|])/);\r\n    \r\n    return parts.map((part, _) => {\r\n      if (part === '&' || part === '|') {\r\n        return part;\r\n      }\r\n\r\n      const whitespaceBefore = part.match(/^\\s*/)[0];\r\n      const whitespaceAfter = part.match(/\\s*$/)[0];\r\n      return `${whitespaceBefore}${highlightType(part.trim())}${whitespaceAfter}`;\r\n    }).join('');\r\n  };\r\n\r\n  let output = \"\";\r\n\r\n  if (typeof definition === \"string\") {\r\n    const baseType = definition.replace(/\\?$/, \"\");\r\n    const isOptional = definition.endsWith(\"?\");\r\n    const highlightedType = highlightTypeDefinition(baseType);\r\n    output = `type ${name} = ${highlightedType}${isOptional ? \"?\" : \"\"};`;\r\n  } else if (typeof definition === \"object\") {\r\n    const formattedProps = Object.entries(definition)\r\n      .map(([key, value]) => {\r\n        let type = \"\";\r\n        let comment = \"\";\r\n\r\n        if (typeof value === \"string\") {\r\n          type = highlightTypeDefinition(value.replace(/\\?$/, \"\")) + \r\n                (value.endsWith(\"?\") ? \"?\" : \"\");\r\n        } else if (typeof value === \"object\" && value.type) {\r\n          type = highlightTypeDefinition(value.type.replace(/\\?$/, \"\")) + \r\n                (value.type.endsWith(\"?\") ? \"?\" : \"\");\r\n          comment = value.comment ? ` -- ${value.comment}` : \"\";\r\n        }\r\n\r\n        return `    ${key}: ${type};${comment}`;\r\n      })\r\n      .join(\"\\n\");\r\n\r\n    output = `type ${name} = {\\n${formattedProps}\\n}`;\r\n  } else {\r\n    output = \"/* Invalid Input */\";\r\n  }\r\n\r\n  return (\r\n    <pre className=\"output\" dangerouslySetInnerHTML={{ __html: highlightSyntax(output) }} />\r\n  );\r\n};\r\n\r\nexport default SyntaxHighlighter;","import React, { useEffect } from \"react\";\r\nimport SyntaxHighlighter from \"./type-highlighter\";\r\nimport CodeBlock from \"../../docs/components/codeblock\";\r\n\r\nconst Type = ({ name, type, code }) => {\r\n    const id = name.replace(/\\s+/g, \"-\").toLowerCase();\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (window.location.hash === `#${id}`) {\r\n                const element = document.getElementById(id);\r\n                if (element) {\r\n                    element.scrollIntoView({\r\n                        behavior: \"smooth\",\r\n                        block: \"center\",\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        handleScroll();\r\n\r\n        window.addEventListener(\"hashchange\", handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"hashchange\", handleScroll);\r\n        };\r\n    }, [id]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <code id={id} className=\"api-name-header\">{name}</code>\r\n            <br />\r\n            <SyntaxHighlighter name={name} definition={type} />\r\n            {code && (\r\n                <div className=\"code-block\">\r\n                    <CodeBlock code={code} language=\"lua\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Type;","import React from \"react\";\r\nimport '../Api.css';\r\nimport Footer from \"../../components/footer\";\r\nimport APITopbar from \"../components/api-topbar\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport \"../css/api-sidebar.css\";\r\nimport Type from \"../components/api-type\";\r\nimport Prop from \"../components/api-prop\";\r\nimport Func from \"../components/api-function\";\r\nimport SidebarInfo from \"../sidebar-info\";\r\nimport ClassMeta from \"../components/class-meta\";\r\n\r\nconst Font = () => {\r\n    return (\r\n        <div className=\"API\">\r\n            <title>API | OSGL</title>\r\n            <APITopbar />\r\n\r\n            <div className=\"sidebar-content\">\r\n                <Sidebar links={SidebarInfo} />\r\n            </div>\r\n\r\n            <div className=\"api-content\">\r\n                <h1 className=\"api-header\">Font</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <ClassMeta metadata={{\r\n                    composite: true,\r\n                    partialThreadSafe: true,\r\n                }} />\r\n\r\n                <p className=\"api-paragraph\">The Font class handles the rendering and loading of Fonts.</p>\r\n\r\n                <h1 className=\"api-header\">Types</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <Type\r\n                    name=\"Glyph\"\r\n                    type=\"number | buffer | { number }\"\r\n                />\r\n\r\n                <Type\r\n                    name=\"Glyphs\"\r\n                    type=\"{ [string]: Glyph }\"\r\n                />\r\n\r\n                <Type\r\n                    name=\"StoredFont\"\r\n                    type={{\r\n                        version: \"string\",\r\n                        letters: \"Glyphs\",\r\n                        maxHeight: \"number\",\r\n                    }}\r\n                />\r\n\r\n                <h1 className=\"api-header\">Properties</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <Prop name=\"glyphs\" fullName=\"Font.glyphs\" type=\"Glyphs\" desc=\"A list of the fonts glyphs\" />\r\n                <Prop name=\"spacing\" fullName=\"Font.spacing\" type=\"number\" desc=\"How much spacing between each letter\" />\r\n                <Prop name=\"linePadding\" fullName=\"Font.linePadding\" type=\"number\" desc=\"How much spacing between each line\" />\r\n\r\n\r\n                <h1 className=\"api-header\">Functions</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <Func\r\n                    name=\"from\"\r\n                    fullName=\"Font.from\"\r\n                    params={{\r\n                        data: \"StoredFont\"\r\n                    }}\r\n                    returnType=\"Result<Font, FontError>\"\r\n                    desc=\"Creates a new Font given an unloaded one.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Font = OSGL.Font\r\n\r\nlocal fontData = require(path.to.font)\r\nlocal font = Font.from(fontData):Unwrap()`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n                <h1 className=\"api-header\">Methods</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <Func\r\n                    name=\"Draw\"\r\n                    isMethod={true}\r\n                    fullName=\"Font:Draw\"\r\n                    params={{\r\n                        object: \"DrawableObject\",\r\n                        text: \"string\",\r\n                        x: \"number\",\r\n                        y: \"number\",\r\n                        color: \"Color\"\r\n                    }}\r\n                    returnType=\"Font\"\r\n                    desc=\"Draws the font at the given location.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\nlocal Window = OSGL.Window\r\nlocal color = OSGL.color\r\n\r\nlocal WIDTH, HEIGHT = 500, 500\r\n\r\nlocal fontData = require(path.to.font)\r\n\r\nlocal image = path.to.imageLabel\r\nlocal window = Window.from(image, WIDTH, HEIGHT)\r\nlocal font = Font.from(fontData):Unwrap()\r\n\r\nfont:Draw(window, \"Hello, World!\", 0, 0, color.BLACK)`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n                <div style={{ height: \"55px\" }} />\r\n            </div>\r\n            <Footer />\r\n            <div className=\"grid-background-dark\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Font;\r\n"],"names":["_ref","name","definition","highlightTypeDefinition","typeDef","split","map","part","_","whitespaceBefore","match","whitespaceAfter","highlightType","trim","join","output","baseType","replace","isOptional","endsWith","Object","entries","_ref2","key","value","type","comment","_jsx","className","dangerouslySetInnerHTML","__html","code","id","toLowerCase","useEffect","handleScroll","window","location","hash","element","document","getElementById","scrollIntoView","behavior","block","addEventListener","removeEventListener","_jsxs","children","SyntaxHighlighter","CodeBlock","language","Font","APITopbar","Sidebar","links","SidebarInfo","ClassMeta","metadata","composite","partialThreadSafe","Type","version","letters","maxHeight","Prop","fullName","desc","Func","params","data","returnType","Checked","isMethod","object","text","x","y","color","style","height","Footer"],"sourceRoot":""}