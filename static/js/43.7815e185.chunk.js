"use strict";(self.webpackChunkosgl_docs=self.webpackChunkosgl_docs||[]).push([[43],{4191:(e,a,r)=>{r.r(a),r.d(a,{default:()=>d});r(5043),r(3774);var t=r(929),n=r(9073),s=r(788),l=(r(5613),r(4721)),c=(r(6724),r(6261)),o=r(4176),u=r(2840),i=r(579);const d=()=>(0,i.jsxs)("div",{className:"API",children:[(0,i.jsx)("title",{children:"API | OSGL"}),(0,i.jsx)(n.A,{}),(0,i.jsx)("div",{className:"sidebar-content",children:(0,i.jsx)(s.A,{links:o.A})}),(0,i.jsxs)("div",{className:"api-content",children:[(0,i.jsx)("h1",{className:"api-header",children:"Texture"}),(0,i.jsx)("div",{className:"api-header-line"}),(0,i.jsx)(u.A,{metadata:{inherits:["DrawableObject"],core:!0,partialThreadSafe:!0}}),(0,i.jsx)("p",{className:"api-paragraph",children:"The Texture class handles the loading and drawing of all Texture instances."}),(0,i.jsx)("h1",{className:"api-header",children:"Types"}),(0,i.jsx)("div",{className:"api-header-line"}),(0,i.jsx)(l.A,{name:"BaseRawTexture",type:{version:"string",width:"number",height:"number",pixels:"buffer"}}),(0,i.jsx)(l.A,{name:"BaseUnloadedTexture",type:{version:"'1.6b'",width:"number",height:"number",pixels:"buffer"}}),(0,i.jsx)(l.A,{name:"RawTexture",type:"ModuleScript | BaseUnloadedTexture"}),(0,i.jsx)("h1",{className:"api-header",children:"Functions"}),(0,i.jsx)("div",{className:"api-header-line"}),(0,i.jsx)(c.A,{name:"fromChecked",fullName:"Texture.fromChecked",params:{rawTexture:"RawTexture"},returnType:"Result<Texture, TextureError>",desc:"Creates a new Texture given a raw one.",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\nlocal myTexture = Texture.fromChecked(script.myTextureModulescript)",metadata:{Checked:!0}}),(0,i.jsx)(c.A,{name:"fromUnchecked",fullName:"Texture.fromUnchecked",params:{rawTexture:"BaseUnloadedTexture"},returnType:"Texture",desc:"Creates a new Texture given an unloaded one.",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\nlocal textureData = require(script.myTextureModulecript)\n\nlocal myTexture = Texture.fromUnchecked(textureData)",metadata:{Unchecked:!0}}),(0,i.jsx)(c.A,{name:"fromAssetId",fullName:"Texture.fromAssetId",params:{assetId:"string"},returnType:"Result<Texture, TextureError>",desc:"Creates a new Texture given an asset id.",code:'local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\nlocal texture = Texture.fromAssetId("rbxassetid://ID"):Unwrap()',metadata:{Checked:!0}}),(0,i.jsx)(c.A,{name:"fromCanvasDrawSaveObject",fullName:"Texture.fromCanvasDrawSaveObject",params:{saveObject:"Instance",slowLoad:{type:"boolean?",comment:"Only available for versions V4.9.0+"}},returnType:"Result<Texture, TextureError>",desc:"Loads a CanvasDraw SaveObject of any",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\nlocal saveObject = script.mySaveObject\nlocal myTexture = Texture.fromCanvasDrawSaveObject(saveObject)",metadata:{Checked:!0}}),(0,i.jsx)(c.A,{name:"new",fullName:"Texture.new",params:{width:"width",height:"height",buffer:"buffer?"},returnType:"Result<Texture, DrawableError>",desc:"Creates a new Texture given a buffer, along with its dimensions.",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\nlocal Window = OSGL.Window\n\nlocal WIDTH, HEIGHT = 50, 50\n\nlocal image = path.to.imageLabel\nlocal window = Window.from(image, WIDTH, HEIGHT):Unwrap()\n\n-- Only errors if WIDTH * HEIGHT * 4 ~= length of the buffer provided\nlocal texture = Texture.new(WIDTH, HEIGHT, window.buffer):Unwrap()",metadata:{Checked:!0}}),(0,i.jsx)(c.A,{name:"serializeChecked",fullName:"Texture.serializeChecked",params:{rawTexture:"RawTexture"},returnType:"Result<(buffer, number, number), TextureError>",desc:"Serializes a raw texture.",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\nlocal txt = Texture.serializeChecked(script.myTextureModulescript)",metadata:{Checked:!0}}),(0,i.jsx)(c.A,{name:"serializeUnchecked",fullName:"Texture.serializeUnchecked",params:{rawTexture:"BaseUnloadedTexture"},returnType:"buffer, number, number",desc:"Serializes an unloaded texture.",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\n\nlocal textureData = require(script.myTextureModulescript)\n\nlocal buffer, width, height = Texture.serializeUnchecked(textureData)",metadata:{Unchecked:!0}}),(0,i.jsx)(c.A,{name:"drawChecked",fullName:"Texture.drawChecked",params:{object:"DrawableObject",texture:"Texture",x:"number",y:"number",rotation:"number?"},returnType:"nil",desc:"Draws a Texture somewhere if in-bound.",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\nlocal Window = OSGL.Window\n\nlocal WIDTH, HEIGHT = 50, 50\n\nlocal image = path.to.imageLabel\nlocal myWindow = Window.from(image, WIDTH, HEIGHT):Unwrap()\n\nlocal myTexture = Texture.fromChecked(script.myTextureModulescript):Unwrap()\nTexture.DrawChecked(myWindow, myTexture, 0, 0)",metadata:{Checked:!0}}),(0,i.jsx)(c.A,{name:"drawUnchecked",fullName:"Texture.drawUnchecked",params:{object:"DrawableObject",texture:"Texture",x:"number",y:"number",rotation:"number?"},returnType:"nil",desc:"Draws a Texture somewhere.",code:"local OSGL = require(path.to.osgl)\nlocal Texture = OSGL.Texture\nlocal Window = OSGL.Window\n\nlocal WIDTH, HEIGHT = 50, 50\n\nlocal image = path.to.imageLabel\nlocal myWindow = Window.from(image, WIDTH, HEIGHT):Unwrap()\n\nlocal myTexture = Texture.fromChecked(script.myTextureModulescript):Unwrap()\nTexture.DrawUnchecked(myWindow, myTexture, 0, 0)",metadata:{Unchecked:!0}}),(0,i.jsx)("div",{style:{height:"55px"}})]}),(0,i.jsx)(t.A,{}),(0,i.jsx)("div",{className:"grid-background-dark"})]})},4721:(e,a,r)=>{r.d(a,{A:()=>o});var t=r(5043),n=r(2207),s=r(579);const l=e=>{let{name:a,definition:r}=e;const t=e=>e.split(/([&|])/).map(((e,a)=>{if("&"===e||"|"===e)return e;const r=e.match(/^\s*/)[0],t=e.match(/\s*$/)[0];return`${r}${(0,n.FD)(e.trim())}${t}`})).join("");let l="";if("string"===typeof r){const e=r.replace(/\?$/,""),n=r.endsWith("?");l=`type ${a} = ${t(e)}${n?"?":""};`}else if("object"===typeof r){l=`type ${a} = {\n${Object.entries(r).map((e=>{let[a,r]=e,n="",s="";return"string"===typeof r?n=t(r.replace(/\?$/,""))+(r.endsWith("?")?"?":""):"object"===typeof r&&r.type&&(n=t(r.type.replace(/\?$/,""))+(r.type.endsWith("?")?"?":""),s=r.comment?` -- ${r.comment}`:""),`    ${a}: ${n};${s}`})).join("\n")}\n}`}else l="/* Invalid Input */";return(0,s.jsx)("pre",{className:"output",dangerouslySetInnerHTML:{__html:(c=l,c.replace(/\b(type)\b/g,'<span class="keyword">$1</span>').replace(/(--.*)$/gm,'<span class="comment">$1</span>'))}});var c};var c=r(4221);const o=e=>{let{name:a,type:r,code:n}=e;const o=a.replace(/\s+/g,"-").toLowerCase();return(0,t.useEffect)((()=>{const e=()=>{if(window.location.hash===`#${o}`){const e=document.getElementById(o);e&&e.scrollIntoView({behavior:"smooth",block:"center"})}};return e(),window.addEventListener("hashchange",e),()=>{window.removeEventListener("hashchange",e)}}),[o]),(0,s.jsxs)("div",{children:[(0,s.jsx)("code",{id:o,className:"api-name-header",children:a}),(0,s.jsx)("br",{}),(0,s.jsx)(l,{name:a,definition:r}),n&&(0,s.jsx)("div",{className:"code-block",children:(0,s.jsx)(c.A,{code:n,language:"lua"})})]})}}}]);
//# sourceMappingURL=43.7815e185.chunk.js.map