{"version":3,"file":"static/js/752.aa6a4cba.chunk.js","mappings":"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","sources":["api/pages/video.js","api/components/type-highlighter.js","api/components/api-type.js"],"sourcesContent":["import React from \"react\";\r\nimport '../Api.css';\r\nimport Footer from \"../../components/footer\";\r\nimport APITopbar from \"../components/api-topbar\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport \"../css/api-sidebar.css\";\r\nimport Type from \"../components/api-type\";\r\nimport Prop from \"../components/api-prop\";\r\nimport Func from \"../components/api-function\";\r\nimport SidebarInfo from \"../sidebar-info\";\r\nimport ClassMeta from \"../components/class-meta\";\r\n\r\nconst Video = () => {\r\n    return (\r\n        <div className=\"API\">\r\n            <title>API | OSGL</title>\r\n            <APITopbar />\r\n\r\n            <div className=\"sidebar-content\">\r\n                <Sidebar links={SidebarInfo} />\r\n            </div>\r\n\r\n            <div className=\"api-content\">\r\n                <h1 className=\"api-header\">Video</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <ClassMeta metadata={{\r\n                    inherits: [\"Texture\"],\r\n                    composite: true,\r\n                    partialThreadSafe: true,\r\n                }} />\r\n\r\n                <p className=\"api-paragraph\">The Video class handles the creation and playback of Videos.</p>\r\n\r\n                <h1 className=\"api-header\">Properties</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <Prop name=\"width\" fullName=\"Video.width\" type=\"number\" desc=\"The width of the video.\" />\r\n                <Prop name=\"height\" fullName=\"Video.height\" type=\"number\" desc=\"The height of the video.\" />\r\n                <Prop name=\"playbackFrame\" fullName=\"Video.playbackFrame\" type=\"number\" desc=\"The index of the current frame that is being displayed.\" />\r\n                <Prop name=\"frameRate\" fullName=\"Video.frameRate\" type=\"number\" desc=\"The framerate of the video.\" />\r\n                <Prop name=\"playing\" fullName=\"Video.playing\" type=\"boolean\" desc=\"Whether the video is playing or not.\" />\r\n                <Prop name=\"loop\" fullName=\"Video.loop\" type=\"boolean\" desc=\"Whether the video should loop after playback ends.\" />\r\n                <Prop name=\"frames\" fullName=\"Video.frames\" type=\"{buffer}\" desc=\"A collection of video frames.\" />\r\n\r\n                <h1 className=\"api-header\">Functions</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <Func\r\n                    name=\"new\"\r\n                    fullName=\"Video.new\"\r\n                    params={{\r\n                        width: \"number\",\r\n                        height: \"number\",\r\n                        frames: \"{buffer}\"\r\n                    }}\r\n                    returnType=\"Video\"\r\n                    desc=\"Creates a new Video given a collection of frames, along with their dimensions.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of buffers ]]-- }\r\nlocal video = video.new(50, 50, frames)`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n                <Func\r\n                    name=\"from\"\r\n                    fullName=\"Video.from\"\r\n                    params={{\r\n                        collection: \"{RawTexture}\"\r\n                    }}\r\n                    returnType=\"Video\"\r\n                    desc=\"Creates a new Video given a collection of frames.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n                <h1 className=\"api-header\">Methods</h1>\r\n                <div className=\"api-header-line\"></div>\r\n\r\n                <Func\r\n                    name=\"PlaySync\"\r\n                    fullName=\"Video:PlaySync\"\r\n                    isMethod={true}\r\n                    params={{\r\n                        callback: \"(width: number, height: number, buffer: number) -> nil\",\r\n                    }}\r\n                    returnType=\"Video\"\r\n                    desc=\"Plays a video synchronously.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\nvideo:PlaySync(function(width, height, buffer)\r\n    -- Do something with the frame\r\nend)`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n<Func\r\n                    name=\"PlayAsync\"\r\n                    fullName=\"Video:PlayAsync\"\r\n                    isMethod={true}\r\n                    params={{\r\n                        callback: \"(width: number, height: number, buffer: number) -> nil\",\r\n                    }}\r\n                    returnType=\"Video\"\r\n                    desc=\"Plays a video asynchronously.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\nvideo:PlaySync(function(width, height, buffer)\r\n    -- Do something with the frame\r\nend)\r\n\r\nprint(\"This still prints while the video is playing!\")`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n<Func\r\n                    name=\"Next\"\r\n                    fullName=\"Video:Next\"\r\n                    isMethod={true}\r\n                    params={{}}\r\n                    returnType=\"Video\"\r\n                    desc=\"Skips to the next frame.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\nvideo:Next()`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n<Func\r\n                    name=\"Previous\"\r\n                    fullName=\"Video:Previous\"\r\n                    isMethod={true}\r\n                    params={{}}\r\n                    returnType=\"Video\"\r\n                    desc=\"Goes to the previous frame of the Video.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\nvideo:Previous()`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n<Func\r\n                    name=\"Stop\"\r\n                    fullName=\"Video:Stop\"\r\n                    isMethod={true}\r\n                    params={{}}\r\n                    returnType=\"Video\"\r\n                    desc=\"Stops playback of the Video.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\nvideo:Stop()`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n<Func\r\n                    name=\"GetFrame\"\r\n                    fullName=\"Video:GetFrame\"\r\n                    isMethod={true}\r\n                    params={{\r\n                        frame: \"number\"\r\n                    }}\r\n                    returnType=\"(buffer, number, number)\"\r\n                    desc=\"Returns a frame of the video.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\n-- The second frame\r\nprint(video:GetFrame(2))`}\r\n                    metadata={{\r\n                        Unchecked: true,\r\n                    }}\r\n                />\r\n\r\n<Func\r\n                    name=\"GetBufferOfFrame\"\r\n                    fullName=\"Video:GetBufferOfFrame\"\r\n                    isMethod={true}\r\n                    params={{\r\n                        frame: \"number\"\r\n                    }}\r\n                    returnType=\"buffer\"\r\n                    desc=\"Returns the buffer of a frame from the video.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\n-- The second frames buffer\r\nprint(video:GetBufferOfFrame(2))`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n<Func\r\n                    name=\"GetBufferOfFrame\"\r\n                    fullName=\"Video:GetBufferOfFrame\"\r\n                    isMethod={true}\r\n                    params={{\r\n                        frame: \"number\"\r\n                    }}\r\n                    returnType=\"buffer\"\r\n                    desc=\"Returns the buffer of a frame from the video.\"\r\n                    code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal frames = { --[[ Array of textures ]]-- }\r\nlocal video = video.new(frames)\r\n-- The second frames buffer\r\nprint(video:GetBufferOfFrame(2))`}\r\n                    metadata={{\r\n                        Checked: true,\r\n                    }}\r\n                />\r\n\r\n                <div style={{ height: \"55px\" }} />\r\n            </div>\r\n            <Footer />\r\n            <div className=\"grid-background-dark\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;\r\n","import React from \"react\";\r\nimport { highlightType } from \"./function-highlighter\";\r\n\r\nconst SyntaxHighlighter = ({ name, definition }) => {\r\n  const highlightSyntax = (code) => {\r\n    return code\r\n      .replace(/\\b(type)\\b/g, '<span class=\"keyword\">$1</span>')\r\n      .replace(/(--.*)$/gm, '<span class=\"comment\">$1</span>');\r\n  };\r\n\r\n  const highlightTypeDefinition = (typeDef) => {\r\n    const parts = typeDef.split(/([&|])/);\r\n    \r\n    return parts.map((part, _) => {\r\n      if (part === '&' || part === '|') {\r\n        return part;\r\n      }\r\n\r\n      const whitespaceBefore = part.match(/^\\s*/)[0];\r\n      const whitespaceAfter = part.match(/\\s*$/)[0];\r\n      return `${whitespaceBefore}${highlightType(part.trim())}${whitespaceAfter}`;\r\n    }).join('');\r\n  };\r\n\r\n  let output = \"\";\r\n\r\n  if (typeof definition === \"string\") {\r\n    const baseType = definition.replace(/\\?$/, \"\");\r\n    const isOptional = definition.endsWith(\"?\");\r\n    const highlightedType = highlightTypeDefinition(baseType);\r\n    output = `type ${name} = ${highlightedType}${isOptional ? \"?\" : \"\"};`;\r\n  } else if (typeof definition === \"object\") {\r\n    const formattedProps = Object.entries(definition)\r\n      .map(([key, value]) => {\r\n        let type = \"\";\r\n        let comment = \"\";\r\n\r\n        if (typeof value === \"string\") {\r\n          type = highlightTypeDefinition(value.replace(/\\?$/, \"\")) + \r\n                (value.endsWith(\"?\") ? \"?\" : \"\");\r\n        } else if (typeof value === \"object\" && value.type) {\r\n          type = highlightTypeDefinition(value.type.replace(/\\?$/, \"\")) + \r\n                (value.type.endsWith(\"?\") ? \"?\" : \"\");\r\n          comment = value.comment ? ` -- ${value.comment}` : \"\";\r\n        }\r\n\r\n        return `    ${key}: ${type};${comment}`;\r\n      })\r\n      .join(\"\\n\");\r\n\r\n    output = `type ${name} = {\\n${formattedProps}\\n}`;\r\n  } else {\r\n    output = \"/* Invalid Input */\";\r\n  }\r\n\r\n  return (\r\n    <pre className=\"output\" dangerouslySetInnerHTML={{ __html: highlightSyntax(output) }} />\r\n  );\r\n};\r\n\r\nexport default SyntaxHighlighter;","import React, { useEffect } from \"react\";\r\nimport SyntaxHighlighter from \"./type-highlighter\";\r\nimport CodeBlock from \"../../docs/components/codeblock\";\r\n\r\nconst Type = ({ name, type, code }) => {\r\n    const id = name.replace(/\\s+/g, \"-\").toLowerCase();\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (window.location.hash === `#${id}`) {\r\n                const element = document.getElementById(id);\r\n                if (element) {\r\n                    element.scrollIntoView({\r\n                        behavior: \"smooth\",\r\n                        block: \"center\",\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        handleScroll();\r\n\r\n        window.addEventListener(\"hashchange\", handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"hashchange\", handleScroll);\r\n        };\r\n    }, [id]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <code id={id} className=\"api-name-header\">{name}</code>\r\n            <br />\r\n            <SyntaxHighlighter name={name} definition={type} />\r\n            {code && (\r\n                <div className=\"code-block\">\r\n                    <CodeBlock code={code} language=\"lua\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Type;"],"names":["Video","_jsxs","className","children","_jsx","APITopbar","Sidebar","links","SidebarInfo","ClassMeta","metadata","inherits","composite","partialThreadSafe","Prop","name","fullName","type","desc","Func","params","width","height","frames","returnType","code","Checked","collection","isMethod","callback","frame","Unchecked","style","Footer","_ref","definition","highlightTypeDefinition","typeDef","split","map","part","_","whitespaceBefore","match","whitespaceAfter","highlightType","trim","join","output","baseType","replace","isOptional","endsWith","Object","entries","_ref2","key","value","comment","dangerouslySetInnerHTML","__html","id","toLowerCase","useEffect","handleScroll","window","location","hash","element","document","getElementById","scrollIntoView","behavior","block","addEventListener","removeEventListener","SyntaxHighlighter","CodeBlock","language"],"sourceRoot":""}