{"version":3,"file":"static/js/218.e104c917.chunk.js","mappings":"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","sources":["docs/pages/migration/migrating.js","docs/components/sidebar.js","docs/components/codeblock.js","docs/components/image-viewer.js","docs/components/doc-topbar.js"],"sourcesContent":["// THIS FILE HAS BEEN AUTOMATICALLY GENERATED AND IS NOT INTENDED TO BE READ\r\nimport React from \"react\";\r\nimport '../../Docs.css';\r\nimport Footer from \"../../../components/footer\";\r\nimport DocTopbar from \"../../components/doc-topbar\";\r\nimport CodeBlock from \"../../components/codeblock\";\r\nimport ImageViewer from \"../../components/image-viewer\";\r\nimport Sidebar from \"../../components/sidebar\";\r\nimport '../../flavours/note.css';\r\nimport '../../flavours/warn.css';\r\nimport '../../flavours/important.css';\r\nimport sidebarInfo from \"../../sidebar-info\";\r\nimport \"../../../css/sidebar.css\";\r\nconst File = () => {\r\n  return (\r\n    <div className=\"Docs\">\r\n      <title>Docs | OSGL</title>\r\n      <DocTopbar />\r\n      \r\n      <div className=\"sidebar-content\">\r\n        <Sidebar sections={sidebarInfo} />\r\n      </div>\r\n      <div className=\"doc-content\">{/* This file was automatically-generated */}\r\n\r\n<h1 className=\"doc-header\">Migration</h1>\r\n<div className=\"doc-header-line\"></div><p className=\"doc-paragraph\">Welcome to the migration guide for transitioning from CanvasDraw to OSGL. This guide will walk you through the key steps and changes needed to migrate your existing codebase smoothly from CanvasDraw to OSGL.</p><p className=\"doc-paragraph\">It's important to note that OSGL and CanvasDraw have different internal architectures. OSGL works differently from CanvasDraw, so you may need to refactor your code.</p><p className=\"doc-paragraph\">In CanvasDraw, you create objects known as canvases with <code>CanvasDraw.new()</code>. In OSGL, you create a <b className=\"doc-paragraph\">window</b>, which you can read about <a className=\"doc-paragraph\" href=\"/osgl/#/docs/introduction/rendering-to-a-window\">here</a>:</p><CodeBlock code={`local CanvasDraw = require(path)\r\nlocal OSGL = require(path)\r\nlocal Window = OSGL.Window -- OSGL is broken down into sub-modules that handle different aspects\r\n\r\n-- CanvasDraw\r\nCanvasDraw.new(Parent, Resolution, Color, Blur)\r\n\r\n-- OSGL\r\nWindow.from(Parent, width, height):Unwrap()`}></CodeBlock><p className=\"doc-paragraph\">You can use the <code>Window.from</code> function to create the equivalent of a CanvasDraw canvas in OSGL. The OSGL code creates an EditableImage of size <code>(width, height)</code>.</p><p className=\"doc-paragraph\">All drawing methods can be directly accessed from the <code>Canvas</code> object in CanvasDraw. This is mostly the same in OSGL, though some drawing is handled by different sub-modules (e.g., drawing textures, etc.). Here is a comparison example:</p><CodeBlock code={`local CanvasDraw = require(path)\r\nlocal OSGL = require(path)\r\n\r\nlocal Window = OSGL.Window\r\nlocal color = OSGL.color\r\n\r\n-- Draw a red pixel\r\nlocal Canvas = CanvasDraw.new(Frame, Vector2.new(150, 100))\r\nCanvas:DrawPixel(Vector2.new(75, 50), Color3.new(1, 0, 0))\r\n\r\n-- Draw a red pixel\r\nlocal window = Window.from(Frame, 150, 100)\r\nwindow:Pixel(76, 51, color.RED)`}></CodeBlock><p className=\"doc-paragraph\">It's also important to note that in OSGL, the top-left corner of the window is (0, 0). In CanvasDraw, it is (1,1). This would mean looping over every pixel in the window would look something like:</p><CodeBlock code={`for y = 0, height - 1 do\r\n    for x = 0, width - 1 do\r\n        -- do something\r\n    end\r\nend`}></CodeBlock><p className=\"doc-paragraph\">Similar to CanvasDraw, you can draw any shape via method:</p><CodeBlock code={`local Canvas = CanvasDraw.new(Frame, Vector2.new(150, 100))\r\nCanvas:DrawPixel(Vector2.new(75, 50), Color3.new(1, 0, 0))\r\nCanvas:DrawLine(Vector2.new(5, 5), Vector2.new(145, 95), Color3.new(1, 0, 0), 2, true)\r\n\r\nlocal window = Window.new(Frame, { sizeX = 150, sizeY = 100 })\r\nwindow:Pixel(76, 51, color.RED)\r\nwindow:Line(6, 6, 146, 96, color.RED)`}></CodeBlock><p className=\"doc-paragraph\">You can find more about these methods in the <a className=\"doc-paragraph\" href=\"/osgl/#/api/drawable-object\">API</a>.</p><p className=\"doc-paragraph\">Both <code>Window</code>s and <code>Texture</code>s are known as <code>DrawableObject</code>s. A <code>Window</code> is a special form of a <code>Texture</code>, and a <code>Texture</code> is a <code>buffer</code> containing pixel data. This is similar to CanvasDraw's <code>ImageData</code>. To save a texture, save the <code>buffer</code>, <code>width</code>, and <code>height</code> (or just the <code>size</code>). Since it's a <code>Texture</code>, you can load it back into the game. This process is described in <a className=\"doc-paragraph\" href=\"/osgl/#/docs/advanced/serialization\">Serialization and Deserialization</a>.</p>\r\n      <div style={{ height: \"55px\" }} />\r\n</div>\r\n      <Footer />\r\n      <div className=\"grid-background-dark\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default File;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Sidebar = ({ sections }) => {\r\n  const [openSections, setOpenSections] = useState({});\r\n  const [animationStates, setAnimationStates] = useState({});\r\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n  useEffect(() => {\r\n    const handleLocationChange = () => {\r\n      setCurrentPath(window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener('popstate', handleLocationChange);\r\n    return () => window.removeEventListener('popstate', handleLocationChange);\r\n  }, []);\r\n\r\n  const toggleSection = (section) => {\r\n    if (openSections[section]) {\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-out' }));\r\n      setTimeout(() => {\r\n        setOpenSections((prev) => ({ ...prev, [section]: false }));\r\n        setAnimationStates((prev) => ({ ...prev, [section]: '' }));\r\n      }, 300);\r\n    } else {\r\n      setOpenSections((prev) => ({ ...prev, [section]: true }));\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-in' }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {sections.map((section, index) => {\r\n        const isSectionActive = currentPath.startsWith(`/${section.id}`);\r\n        return (\r\n          <div key={index} className=\"sidebar-section\">\r\n            <div \r\n              className=\"section-header\" \r\n              onClick={() => toggleSection(section.title)}\r\n            >\r\n              <span style={{ color: isSectionActive ? '#446EE4' : 'white' }}>\r\n                {section.title}\r\n              </span>\r\n              <span \r\n                className=\"toggle-icon\" \r\n                style={{ transform: openSections[section.title] ? 'rotate(90deg)' : 'rotate(0deg)' }}\r\n              >\r\n                ►\r\n              </span>\r\n            </div>\r\n\r\n            {openSections[section.title] && (\r\n              <div className={`sub-sections ${animationStates[section.title]}`}>\r\n                {section.links.map((link, linkIndex) => {\r\n                  const isLinkActive = currentPath === link.href;\r\n                  return (\r\n                    <a \r\n                      key={linkIndex} \r\n                      href={link.href} \r\n                      className=\"sub-section-link\"\r\n                      style={{ \r\n                        animationDelay: `${linkIndex * 0.1}s`,\r\n                        color: isLinkActive ? '#446EE4' : '#c2c7d6',\r\n                      }}\r\n                    >\r\n                      {link.text}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/github-dark.css\";\r\nimport '../Docs.css'; // Import your CSS file\r\n\r\nconst CodeBlock = ({ code, language = \"lua\", filename }) => {\r\n    useEffect(() => {\r\n        hljs.registerLanguage('lua', require('highlight.js/lib/languages/lua'));\r\n    }, []);\r\n\r\n    const [copied, setCopied] = useState(false);\r\n    const codeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (codeRef.current) {\r\n            hljs.highlightElement(codeRef.current);\r\n        }\r\n    }, [code]);\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(code)\r\n            .then(() => {\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), 1500);\r\n            })\r\n            .catch(err => console.error(\"Copy failed:\", err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-block-container\">\r\n            {filename && (\r\n                <div className=\"filename\">\r\n                    <p className=\"doc-paragraph\">{filename}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Code block */}\r\n            <pre className=\"code-block\">\r\n                <code ref={codeRef} className={`language-${language}`}>\r\n                    {code}\r\n                </code>\r\n            </pre>\r\n\r\n            {/* Copy button */}\r\n            <button \r\n                className={`copy-btn ${copied ? \"copied\" : \"\"}`}\r\n                onClick={copyToClipboard}\r\n            >\r\n                {copied ? \"Copied!\" : \"Copy\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeBlock;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ImageViewer = ({ src, alt = \"Image\", className = \"\" }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Delay adding \"visible\" class for fade-in effect\r\n            setTimeout(() => setIsVisible(true), 10);\r\n        } else {\r\n            // Start fade-out animation\r\n            setIsVisible(false);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            if (e.key === \"Escape\") closeLightbox();\r\n        };\r\n        document.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setIsVisible(false); // Start fade-out animation\r\n        setTimeout(() => setIsOpen(false), 300); // Wait for animation to finish before removing from DOM\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Small Image */}\r\n            <img \r\n                src={\"/osgl\" + src} \r\n                alt={alt} \r\n                className={`image-thumbnail ${className}`}\r\n                onClick={() => setIsOpen(true)}\r\n            />\r\n\r\n            {/* Fullscreen Lightbox */}\r\n            {isOpen && (\r\n                <div className={`image-overlay ${isVisible ? \"visible\" : \"\"}`} onClick={closeLightbox}>\r\n                    <div className={`image-container ${isVisible ? \"visible\" : \"\"}`} onClick={(e) => e.stopPropagation()}>\r\n                        {/* Close Button */}\r\n                        <button className=\"close-button\" onClick={closeLightbox}>✕</button>\r\n\r\n                        {/* Enlarged Image */}\r\n                        <img src={\"/osgl\" + src} alt={alt} className=\"enlarged-image\" />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageViewer;","import React from \"react\";\r\nimport TopbarButton from \"../../components/topbar-button\";\r\nimport TopbarOneWayButton from \"../../components/topbar-one-way-button\";\r\n\r\nconst DocTopbar = () => {\r\n    return <div className=\"topbar\" style={{height: \"55px\", position: \"fixed\" }}>\r\n        <TopbarOneWayButton name=\"logo\" link=\"/osgl\" />\r\n\r\n        <div className=\"docs-sig\">\r\n            <img\r\n                src=\"/osgl/docs-colour.png\"\r\n                alt=\"docs\"\r\n                className=\"docs-img\"\r\n            />\r\n        </div>\r\n\r\n        <img src=\"/osgl/logo-sep.png\" alt=\"Separator\" className=\"seperator-img\" style={{marginLeft: \"75px\"}} />\r\n\r\n        <TopbarButton name=\"api\" link=\"/osgl/#/api\" />\r\n        <TopbarButton name=\"github\" link=\"https://github.com/osgl-rbx/osgl/\" />\r\n    </div>\r\n}\r\n\r\nexport default DocTopbar;"],"names":["File","_jsxs","className","children","_jsx","DocTopbar","Sidebar","sections","sidebarInfo","href","CodeBlock","code","style","height","Footer","_ref","openSections","setOpenSections","useState","animationStates","setAnimationStates","currentPath","setCurrentPath","window","location","pathname","useEffect","handleLocationChange","addEventListener","removeEventListener","map","section","index","isSectionActive","startsWith","id","onClick","prev","setTimeout","toggleSection","title","color","transform","links","link","linkIndex","isLinkActive","animationDelay","text","language","filename","hljs","registerLanguage","require","copied","setCopied","codeRef","useRef","current","highlightElement","ref","copyToClipboard","navigator","clipboard","writeText","then","catch","err","console","error","src","alt","isOpen","setIsOpen","isVisible","setIsVisible","handleKeyDown","e","key","closeLightbox","document","_Fragment","stopPropagation","position","TopbarOneWayButton","name","marginLeft","TopbarButton"],"sourceRoot":""}