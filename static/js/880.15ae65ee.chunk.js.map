{"version":3,"file":"static/js/880.15ae65ee.chunk.js","mappings":"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","sources":["docs/components/sidebar.js","docs/pages/videos/loading.js","docs/components/codeblock.js","docs/components/image-viewer.js","docs/components/doc-topbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Sidebar = ({ sections }) => {\r\n  const [openSections, setOpenSections] = useState({});\r\n  const [animationStates, setAnimationStates] = useState({});\r\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n  useEffect(() => {\r\n    const handleLocationChange = () => {\r\n      setCurrentPath(window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener('popstate', handleLocationChange);\r\n    return () => window.removeEventListener('popstate', handleLocationChange);\r\n  }, []);\r\n\r\n  const toggleSection = (section) => {\r\n    if (openSections[section]) {\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-out' }));\r\n      setTimeout(() => {\r\n        setOpenSections((prev) => ({ ...prev, [section]: false }));\r\n        setAnimationStates((prev) => ({ ...prev, [section]: '' }));\r\n      }, 300);\r\n    } else {\r\n      setOpenSections((prev) => ({ ...prev, [section]: true }));\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-in' }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {sections.map((section, index) => {\r\n        const isSectionActive = currentPath.startsWith(`/${section.id}`);\r\n        return (\r\n          <div key={index} className=\"sidebar-section\">\r\n            <div \r\n              className=\"section-header\" \r\n              onClick={() => toggleSection(section.title)}\r\n            >\r\n              <span style={{ color: isSectionActive ? '#446EE4' : 'white' }}>\r\n                {section.title}\r\n              </span>\r\n              <span \r\n                className=\"toggle-icon\" \r\n                style={{ transform: openSections[section.title] ? 'rotate(90deg)' : 'rotate(0deg)' }}\r\n              >\r\n                â–º\r\n              </span>\r\n            </div>\r\n\r\n            {openSections[section.title] && (\r\n              <div className={`sub-sections ${animationStates[section.title]}`}>\r\n                {section.links.map((link, linkIndex) => {\r\n                  const isLinkActive = currentPath === link.href;\r\n                  return (\r\n                    <a \r\n                      key={linkIndex} \r\n                      href={link.href} \r\n                      className=\"sub-section-link\"\r\n                      style={{ \r\n                        animationDelay: `${linkIndex * 0.1}s`,\r\n                        color: isLinkActive ? '#446EE4' : '#c2c7d6',\r\n                      }}\r\n                    >\r\n                      {link.text}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","// THIS FILE HAS BEEN AUTOMATICALLY GENERATED AND IS NOT INTENDED TO BE READ\r\nimport React from \"react\";\r\nimport '../../Docs.css';\r\nimport Footer from \"../../../components/footer\";\r\nimport DocTopbar from \"../../components/doc-topbar\";\r\nimport CodeBlock from \"../../components/codeblock\";\r\nimport ImageViewer from \"../../components/image-viewer\";\r\nimport Sidebar from \"../../components/sidebar\";\r\nimport '../../flavours/note.css';\r\nimport '../../flavours/warn.css';\r\nimport '../../flavours/important.css';\r\nimport sidebarInfo from \"../../sidebar-info\";\r\nimport \"../../../css/sidebar.css\";\r\nconst File = () => {\r\n  return (\r\n    <div className=\"Docs\">\r\n      <title>Docs | OSGL</title>\r\n      <DocTopbar />\r\n      \r\n      <div className=\"sidebar-content\">\r\n        <Sidebar sections={sidebarInfo} />\r\n      </div>\r\n      <div className=\"doc-content\">{/* This file was automatically-generated */}\r\n\r\n<h1 className=\"doc-header\">Loading Videos</h1>\r\n<div className=\"doc-header-line\"></div><p className=\"doc-paragraph\">To load a video format, such as an MP4, like a <code>Texture</code>, OSGL uses an external tool bundled with OSGL on the GitHub releases page, <a className=\"doc-paragraph\" href=\"https://github.com/osgl-rbx/osgl/releases/latest\">here</a>, named <code>video-converter</code>. Choose the version for your OS. If unsure, feel free to ask us!</p><div class=\"note\"><div class=\"note-title\">NOTE</div><div class=\"note-body\">You can get help with the<code> video-converter</code> executable by running it in the command prompt with the <code>-h</code> flag, e.g.: <code>> video-converter -h</code><br></br></div></div><p className=\"doc-paragraph\">The <code>video-converter</code> converts the video into a series of <code>Textures</code>. The structure of each texture is documented <a className=\"doc-paragraph\" href=\"/osgl/#/docs/textures/format\">here</a>.</p><p className=\"doc-paragraph\">A video can be loaded via the <code>Video.from</code> function. Pass an array of Textures in order:</p><CodeBlock code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\n-- ...\r\n\r\nlocal video = Video.from({ frameOne, frameTwo })\r\n-- \"video\" is a video of frameOne and frameTwo`}></CodeBlock><p className=\"doc-paragraph\">All frames must be the same size. If a frame isn't the same size as the others, it will be discarded.</p><p className=\"doc-paragraph\">You can also create a blank video with the given dimensions and an optional buffer, allowing you to create videos during runtime:</p><CodeBlock code={`local OSGL = require(path.to.osgl)\r\nlocal Video = OSGL.Video\r\n\r\nlocal video = Video.new(50, 50)\r\n-- Creates a blank 50x50 video with no frames\r\n\r\nlocal video2 = Video.new(50, 50, {frameOne, frameTwo})\r\n-- Creates a 50x50 video with frameOne and frameTwo`}></CodeBlock><div class=\"warn\"><div class=\"warn-title\">WARNING</div><div class=\"warn-body\">High-resolution videos are even more expensive to load into memory than textures! Try to avoid storing them. Instead, consider optimizing your videos by reducing their resolution or compressing them before loading. This will help manage memory usage and improve performance. Roblox is not good at loading large videos! Try to stick to gifs under 100 frames for optimal performance.</div></div>\r\n      <div style={{ height: \"55px\" }} />\r\n</div>\r\n      <Footer />\r\n      <div className=\"grid-background-dark\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default File;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/github-dark.css\";\r\nimport '../Docs.css'; // Import your CSS file\r\n\r\nconst CodeBlock = ({ code, language = \"lua\", filename }) => {\r\n    useEffect(() => {\r\n        hljs.registerLanguage('lua', require('highlight.js/lib/languages/lua'));\r\n    }, []);\r\n\r\n    const [copied, setCopied] = useState(false);\r\n    const codeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (codeRef.current) {\r\n            hljs.highlightElement(codeRef.current);\r\n        }\r\n    }, [code]);\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(code)\r\n            .then(() => {\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), 1500);\r\n            })\r\n            .catch(err => console.error(\"Copy failed:\", err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-block-container\">\r\n            {filename && (\r\n                <div className=\"filename\">\r\n                    <p className=\"doc-paragraph\">{filename}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Code block */}\r\n            <pre className=\"code-block\">\r\n                <code ref={codeRef} className={`language-${language}`}>\r\n                    {code}\r\n                </code>\r\n            </pre>\r\n\r\n            {/* Copy button */}\r\n            <button \r\n                className={`copy-btn ${copied ? \"copied\" : \"\"}`}\r\n                onClick={copyToClipboard}\r\n            >\r\n                {copied ? \"Copied!\" : \"Copy\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeBlock;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ImageViewer = ({ src, alt = \"Image\", className = \"\" }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Delay adding \"visible\" class for fade-in effect\r\n            setTimeout(() => setIsVisible(true), 10);\r\n        } else {\r\n            // Start fade-out animation\r\n            setIsVisible(false);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            if (e.key === \"Escape\") closeLightbox();\r\n        };\r\n        document.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setIsVisible(false); // Start fade-out animation\r\n        setTimeout(() => setIsOpen(false), 300); // Wait for animation to finish before removing from DOM\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Small Image */}\r\n            <img \r\n                src={\"/osgl\" + src} \r\n                alt={alt} \r\n                className={`image-thumbnail ${className}`}\r\n                onClick={() => setIsOpen(true)}\r\n            />\r\n\r\n            {/* Fullscreen Lightbox */}\r\n            {isOpen && (\r\n                <div className={`image-overlay ${isVisible ? \"visible\" : \"\"}`} onClick={closeLightbox}>\r\n                    <div className={`image-container ${isVisible ? \"visible\" : \"\"}`} onClick={(e) => e.stopPropagation()}>\r\n                        {/* Close Button */}\r\n                        <button className=\"close-button\" onClick={closeLightbox}>âœ•</button>\r\n\r\n                        {/* Enlarged Image */}\r\n                        <img src={\"/osgl\" + src} alt={alt} className=\"enlarged-image\" />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageViewer;","import React from \"react\";\r\nimport TopbarButton from \"../../components/topbar-button\";\r\nimport TopbarOneWayButton from \"../../components/topbar-one-way-button\";\r\n\r\nconst DocTopbar = () => {\r\n    return <div className=\"topbar\" style={{height: \"55px\", position: \"fixed\" }}>\r\n        <TopbarOneWayButton name=\"logo\" link=\"/osgl\" />\r\n\r\n        <div className=\"docs-sig\">\r\n            <img\r\n                src=\"/osgl/docs-colour.png\"\r\n                alt=\"docs\"\r\n                className=\"docs-img\"\r\n            />\r\n        </div>\r\n\r\n        <img src=\"/osgl/logo-sep.png\" alt=\"Separator\" className=\"seperator-img\" style={{marginLeft: \"75px\"}} />\r\n\r\n        <TopbarButton name=\"api\" link=\"/osgl/#/api\" />\r\n        <TopbarButton name=\"github\" link=\"https://github.com/osgl-rbx/osgl/\" />\r\n    </div>\r\n}\r\n\r\nexport default DocTopbar;"],"names":["_ref","sections","openSections","setOpenSections","useState","animationStates","setAnimationStates","currentPath","setCurrentPath","window","location","pathname","useEffect","handleLocationChange","addEventListener","removeEventListener","_jsx","className","children","map","section","index","isSectionActive","startsWith","id","_jsxs","onClick","prev","setTimeout","toggleSection","title","style","color","transform","links","link","linkIndex","isLinkActive","href","animationDelay","text","File","DocTopbar","Sidebar","sidebarInfo","class","CodeBlock","code","height","Footer","language","filename","hljs","registerLanguage","require","copied","setCopied","codeRef","useRef","current","highlightElement","ref","copyToClipboard","navigator","clipboard","writeText","then","catch","err","console","error","src","alt","isOpen","setIsOpen","isVisible","setIsVisible","handleKeyDown","e","key","closeLightbox","document","_Fragment","stopPropagation","position","TopbarOneWayButton","name","marginLeft","TopbarButton"],"sourceRoot":""}