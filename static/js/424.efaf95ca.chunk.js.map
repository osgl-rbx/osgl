{"version":3,"file":"static/js/424.efaf95ca.chunk.js","mappings":"wQAaA,MAwEA,EAxEaA,KAETC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KAEVD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,KAACE,EAAAA,EAAO,CAACC,SAAUC,EAAAA,OAErBP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAElCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,wBAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBACfE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,0CAAyCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,yCAAqCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAc,2CAAuCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WAAa,kBAAcC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAc,kBAAcC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAAsB,gBAAWC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WAAa,gBAAYC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAe,cAASC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,wBAA0B,OAAGC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,0BAA4B,kBAAeC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,KAAM,2XAW7cN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,iBAAgBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EAC3CF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,qBAAiBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,SAAKC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAgB,2BAAsBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,0BAA4B,iBAAcF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,WAAOC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,wBAA0B,oBAAgBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,UAAMC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,8BAExSC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,qCAAoCF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,wBAAoBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAc,YAAQC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WAAc,iBAAYC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAAqB,QAAKC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,KAAM,4gBAkB7NN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,6CAA4CF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeC,SAAA,CAAC,iDAA6CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAc,2BAAuBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAAqB,QAAKC,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAACC,KAAM,irBAmBvON,EAAAA,EAAAA,KAAA,OAAKO,MAAO,CAAEC,OAAQ,cAEtBR,EAAAA,EAAAA,KAACS,EAAAA,EAAM,KACPT,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2B,qEC9ErB,MA2EA,EA3EgBY,IAAmB,IAAlB,SAAEP,GAAUO,EAC3B,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,CAAC,IAC3CC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,CAAC,IACjDG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAASK,OAAOC,SAASC,WAE/DC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAuBA,KAC3BL,EAAeC,OAAOC,SAASC,SAAS,EAI1C,OADAF,OAAOK,iBAAiB,WAAYD,GAC7B,IAAMJ,OAAOM,oBAAoB,WAAYF,EAAqB,GACxE,IAeH,OACEtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SACrBI,EAASsB,KAAI,CAACC,EAASC,KACtB,MAAMC,EAAkBZ,EAAYa,WAAW,IAAIH,EAAQI,MAC3D,OACEjC,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,kBAAiBC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OACEC,UAAU,iBACViC,QAASA,IArBEL,KACjBf,EAAae,IACfX,GAAoBiB,IAAI,IAAWA,EAAM,CAACN,GAAU,eACpDO,YAAW,KACTrB,GAAiBoB,IAAI,IAAWA,EAAM,CAACN,IAAU,MACjDX,GAAoBiB,IAAI,IAAWA,EAAM,CAACN,GAAU,MAAM,GACzD,OAEHd,GAAiBoB,IAAI,IAAWA,EAAM,CAACN,IAAU,MACjDX,GAAoBiB,IAAI,IAAWA,EAAM,CAACN,GAAU,cACtD,EAWyBQ,CAAcR,EAAQS,OAAOpC,SAAA,EAE5CC,EAAAA,EAAAA,KAAA,QAAMO,MAAO,CAAE6B,MAAOR,EAAkB,UAAY,SAAU7B,SAC3D2B,EAAQS,SAEXnC,EAAAA,EAAAA,KAAA,QACEF,UAAU,cACVS,MAAO,CAAE8B,UAAW1B,EAAae,EAAQS,OAAS,gBAAkB,gBAAiBpC,SACtF,cAKFY,EAAae,EAAQS,SACpBnC,EAAAA,EAAAA,KAAA,OAAKF,UAAW,gBAAgBgB,EAAgBY,EAAQS,SAASpC,SAC9D2B,EAAQY,MAAMb,KAAI,CAACc,EAAMC,KACxB,MAAMC,EAAezB,IAAgBuB,EAAKG,KAC1C,OACE1C,EAAAA,EAAAA,KAAA,KAEE0C,KAAMH,EAAKG,KACX5C,UAAU,mBACVS,MAAO,CACLoC,eAA+B,GAAZH,EAAH,IAChBJ,MAAOK,EAAe,UAAY,WAClC1C,SAEDwC,EAAKK,MARDJ,EASH,QA/BJb,EAoCJ,KAGN,C,qFCpEV,MAiDA,EAjDkBjB,IAA2C,IAA1C,KAAEJ,EAAI,SAAEuC,EAAW,MAAK,SAAEC,GAAUpC,GACnDW,EAAAA,EAAAA,YAAU,KACN0B,EAAAA,EAAKC,iBAAiB,MAAOC,EAAQ,MAAkC,GACxE,IAEH,MAAOC,EAAQC,IAAatC,EAAAA,EAAAA,WAAS,GAC/BuC,GAAUC,EAAAA,EAAAA,QAAO,OAEvBhC,EAAAA,EAAAA,YAAU,KACF+B,EAAQE,SACRP,EAAAA,EAAKQ,iBAAiBH,EAAQE,QAClC,GACD,CAAChD,IAWJ,OACIT,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,CAChC+C,IACG9C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAE+C,OAKtC9C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACvBC,EAAAA,EAAAA,KAAA,QAAMwD,IAAKJ,EAAStD,UAAW,YAAY+C,IAAW9C,SACjDO,OAKTN,EAAAA,EAAAA,KAAA,UACIF,UAAW,aAAYoD,EAAS,SAAW,IAC3CnB,QA3BY0B,KACpBC,UAAUC,UAAUC,UAAUtD,GACzBuD,MAAK,KACFV,GAAU,GACVlB,YAAW,IAAMkB,GAAU,IAAQ,KAAK,IAE3CW,OAAMC,GAAOC,QAAQC,MAAM,eAAgBF,IAAK,EAqBpBhE,SAExBmD,EAAS,UAAY,WAExB,C,yDChDd,MAqDA,EArDoBxC,IAA6C,IAA5C,IAAEwD,EAAG,IAAEC,EAAM,QAAO,UAAErE,EAAY,IAAIY,EACvD,MAAO0D,EAAQC,IAAaxD,EAAAA,EAAAA,WAAS,IAC9ByD,EAAWC,IAAgB1D,EAAAA,EAAAA,WAAS,IAE3CQ,EAAAA,EAAAA,YAAU,KACF+C,EAEAnC,YAAW,IAAMsC,GAAa,IAAO,IAGrCA,GAAa,EACjB,GACD,CAACH,KAEJ/C,EAAAA,EAAAA,YAAU,KACN,MAAMmD,EAAiBC,IACL,WAAVA,EAAEC,KAAkBC,GAAe,EAG3C,OADAC,SAASrD,iBAAiB,UAAWiD,GAC9B,IAAMI,SAASpD,oBAAoB,UAAWgD,EAAc,GACpE,IAEH,MAAMG,EAAgBA,KAClBJ,GAAa,GACbtC,YAAW,IAAMoC,GAAU,IAAQ,IAAI,EAG3C,OACIxE,EAAAA,EAAAA,MAAAgF,EAAAA,SAAA,CAAA9E,SAAA,EAEIC,EAAAA,EAAAA,KAAA,OACIkE,IAAK,QAAUA,EACfC,IAAKA,EACLrE,UAAW,mBAAmBA,IAC9BiC,QAASA,IAAMsC,GAAU,KAI5BD,IACGpE,EAAAA,EAAAA,KAAA,OAAKF,UAAW,kBAAiBwE,EAAY,UAAY,IAAMvC,QAAS4C,EAAc5E,UAClFF,EAAAA,EAAAA,MAAA,OAAKC,UAAW,oBAAmBwE,EAAY,UAAY,IAAMvC,QAAU0C,GAAMA,EAAEK,kBAAkB/E,SAAA,EAEjGC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,eAAeiC,QAAS4C,EAAc5E,SAAC,YAGzDC,EAAAA,EAAAA,KAAA,OAAKkE,IAAK,QAAUA,EAAKC,IAAKA,EAAKrE,UAAU,0BAI1D,C,mGC/CX,MAmBA,EAnBkBG,KACPJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAASS,MAAO,CAACC,OAAQ,OAAQuE,SAAU,SAAUhF,SAAA,EACvEC,EAAAA,EAAAA,KAACgF,EAAAA,EAAkB,CAACC,KAAK,OAAO1C,KAAK,WAErCvC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACrBC,EAAAA,EAAAA,KAAA,OACIkE,IAAI,wBACJC,IAAI,OACJrE,UAAU,gBAIlBE,EAAAA,EAAAA,KAAA,OAAKkE,IAAI,qBAAqBC,IAAI,YAAYrE,UAAU,gBAAgBS,MAAO,CAAC2E,WAAY,WAE5FlF,EAAAA,EAAAA,KAACmF,EAAAA,EAAY,CAACF,KAAK,MAAM1C,KAAK,eAC9BvC,EAAAA,EAAAA,KAACmF,EAAAA,EAAY,CAACF,KAAK,SAAS1C,KAAK,wC","sources":["docs/pages/textures/rendering.js","docs/components/sidebar.js","docs/components/codeblock.js","docs/components/image-viewer.js","docs/components/doc-topbar.js"],"sourcesContent":["// THIS FILE HAS BEEN AUTOMATICALLY GENERATED AND IS NOT INTENDED TO BE READ\r\nimport React from \"react\";\r\nimport '../../Docs.css';\r\nimport Footer from \"../../../components/footer\";\r\nimport DocTopbar from \"../../components/doc-topbar\";\r\nimport CodeBlock from \"../../components/codeblock\";\r\nimport ImageViewer from \"../../components/image-viewer\";\r\nimport Sidebar from \"../../components/sidebar\";\r\nimport '../../flavours/note.css';\r\nimport '../../flavours/warn.css';\r\nimport '../../flavours/important.css';\r\nimport sidebarInfo from \"../../sidebar-info\";\r\nimport \"../../../css/sidebar.css\";\r\nconst File = () => {\r\n  return (\r\n    <div className=\"Docs\">\r\n      <title>Docs | OSGL</title>\r\n      <DocTopbar />\r\n      \r\n      <div className=\"sidebar-content\">\r\n        <Sidebar sections={sidebarInfo} />\r\n      </div>\r\n      <div className=\"doc-content\">{/* This file was automatically-generated */}\r\n\r\n<h1 className=\"doc-header\">Rendering Textures</h1>\r\n<div className=\"doc-header-line\"></div>\r\n<h2 className=\"doc-header\">Drawing a Texture on Another Texture</h2><p className=\"doc-paragraph\">As previously alluded to, in OSGL, a <code>Texture</code> is essentially a buffer, similar to a <code>Window</code>. To render a <code>Texture</code> onto another <code>DrawableObject</code>, such as a <code>Window</code> or another <code>Texture</code>, use the <code>Texture.drawChecked</code> / <code>Texture.drawUnchecked</code> functions:</p><CodeBlock code={`local OSGL = require(path.to.osgl)\r\nlocal Texture = OSGL.Texture\r\n\r\nlocal textureData = require(path.to.texture)\r\nlocal secondTextureData = require(path.to.secondTexture)\r\n\r\nlocal textureA = Texture.fromUnchecked(textureData)\r\nlocal textureB = Texture.fromUnchecked(secondTextureData)\r\n\r\n-- Draw textureB on textureA at (0, 0)\r\nTexture.drawChecked(textureA, textureB, 0, 0)`}></CodeBlock>\r\n<h3 className=\"doc-header\">Explanation</h3><ul>\r\n<p className=\"doc-paragraph\">\t- Two textures, <code>textureA</code> and <code>textureB</code>, are loaded using the <code>Texture.fromUnchecked</code> function.</p><p className=\"doc-paragraph\">\t- The <code>Texture.drawChecked</code> function draws <code>textureB</code> onto <code>textureA</code> at position (0, 0).</p></ul>\r\n\r\n<h2 className=\"doc-header\">Drawing a Texture onto a Window</h2><p className=\"doc-paragraph\">You can also draw a <code>Texture</code> onto a <code>Window</code>, as it is a <code>DrawableObject</code>:</p><CodeBlock code={`local OSGL = require(path.to.osgl)\r\nlocal Window = OSGL.Window\r\nlocal Texture = OSGL.Texture\r\n\r\nlocal WIDTH, HEIGHT = 100, 100\r\n\r\n-- Create a new window\r\nlocal myWindow = Window.from(parent, WIDTH, HEIGHT):Unwrap()\r\n\r\n-- Load a texture\r\nlocal textureData = require(path.to.texture)\r\nlocal myTexture = Texture.fromUnchecked(textureData)\r\n\r\n-- Draw the texture onto the window at position (10, 10)\r\nTexture.drawUnchecked(myWindow, myTexture, 10, 10)\r\n\r\n-- Render the window to display it on the screen\r\nmyWindow:Render()`}></CodeBlock>\r\n<h2 className=\"doc-header\">Example: Combining Textures with Layers</h2><p className=\"doc-paragraph\">Using this knowledge, you can layer multiple <code>Texture</code> objects onto a single <code>DrawableObject</code>:</p><CodeBlock code={`local OSGL = require(path.to.osgl)\r\nlocal Texture = OSGL.Texture\r\n\r\n-- Load base texture and two additional layers\r\nlocal baseTextureData = require(path.to.baseTexture)\r\nlocal layer1Data = require(path.to.layer1)\r\nlocal layer2Data = require(path.to.layer2)\r\n\r\nlocal baseTexture = Texture.fromUnchecked(baseTextureData)\r\nlocal layer1 = Texture.fromUnchecked(layer1Data)\r\nlocal layer2 = Texture.fromUnchecked(layer2Data)\r\n\r\n-- Draw layer1 onto the base texture at (20, 20)\r\nTexture.drawChecked(baseTexture, layer1, 20, 20)\r\n\r\n-- Draw layer2 onto the updated base texture at (40, 40)\r\nTexture.drawChecked(baseTexture, layer2, 40, 40)\r\n\r\n-- Now baseTexture contains both layers combined!`}></CodeBlock>\r\n      <div style={{ height: \"55px\" }} />\r\n</div>\r\n      <Footer />\r\n      <div className=\"grid-background-dark\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default File;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Sidebar = ({ sections }) => {\r\n  const [openSections, setOpenSections] = useState({});\r\n  const [animationStates, setAnimationStates] = useState({});\r\n  const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n  useEffect(() => {\r\n    const handleLocationChange = () => {\r\n      setCurrentPath(window.location.pathname);\r\n    };\r\n\r\n    window.addEventListener('popstate', handleLocationChange);\r\n    return () => window.removeEventListener('popstate', handleLocationChange);\r\n  }, []);\r\n\r\n  const toggleSection = (section) => {\r\n    if (openSections[section]) {\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-out' }));\r\n      setTimeout(() => {\r\n        setOpenSections((prev) => ({ ...prev, [section]: false }));\r\n        setAnimationStates((prev) => ({ ...prev, [section]: '' }));\r\n      }, 300);\r\n    } else {\r\n      setOpenSections((prev) => ({ ...prev, [section]: true }));\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-in' }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {sections.map((section, index) => {\r\n        const isSectionActive = currentPath.startsWith(`/${section.id}`);\r\n        return (\r\n          <div key={index} className=\"sidebar-section\">\r\n            <div \r\n              className=\"section-header\" \r\n              onClick={() => toggleSection(section.title)}\r\n            >\r\n              <span style={{ color: isSectionActive ? '#446EE4' : 'white' }}>\r\n                {section.title}\r\n              </span>\r\n              <span \r\n                className=\"toggle-icon\" \r\n                style={{ transform: openSections[section.title] ? 'rotate(90deg)' : 'rotate(0deg)' }}\r\n              >\r\n                ►\r\n              </span>\r\n            </div>\r\n\r\n            {openSections[section.title] && (\r\n              <div className={`sub-sections ${animationStates[section.title]}`}>\r\n                {section.links.map((link, linkIndex) => {\r\n                  const isLinkActive = currentPath === link.href;\r\n                  return (\r\n                    <a \r\n                      key={linkIndex} \r\n                      href={link.href} \r\n                      className=\"sub-section-link\"\r\n                      style={{ \r\n                        animationDelay: `${linkIndex * 0.1}s`,\r\n                        color: isLinkActive ? '#446EE4' : '#c2c7d6',\r\n                      }}\r\n                    >\r\n                      {link.text}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/github-dark.css\";\r\nimport '../Docs.css'; // Import your CSS file\r\n\r\nconst CodeBlock = ({ code, language = \"lua\", filename }) => {\r\n    useEffect(() => {\r\n        hljs.registerLanguage('lua', require('highlight.js/lib/languages/lua'));\r\n    }, []);\r\n\r\n    const [copied, setCopied] = useState(false);\r\n    const codeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (codeRef.current) {\r\n            hljs.highlightElement(codeRef.current);\r\n        }\r\n    }, [code]);\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(code)\r\n            .then(() => {\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), 1500);\r\n            })\r\n            .catch(err => console.error(\"Copy failed:\", err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-block-container\">\r\n            {filename && (\r\n                <div className=\"filename\">\r\n                    <p className=\"doc-paragraph\">{filename}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Code block */}\r\n            <pre className=\"code-block\">\r\n                <code ref={codeRef} className={`language-${language}`}>\r\n                    {code}\r\n                </code>\r\n            </pre>\r\n\r\n            {/* Copy button */}\r\n            <button \r\n                className={`copy-btn ${copied ? \"copied\" : \"\"}`}\r\n                onClick={copyToClipboard}\r\n            >\r\n                {copied ? \"Copied!\" : \"Copy\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeBlock;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ImageViewer = ({ src, alt = \"Image\", className = \"\" }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Delay adding \"visible\" class for fade-in effect\r\n            setTimeout(() => setIsVisible(true), 10);\r\n        } else {\r\n            // Start fade-out animation\r\n            setIsVisible(false);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            if (e.key === \"Escape\") closeLightbox();\r\n        };\r\n        document.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setIsVisible(false); // Start fade-out animation\r\n        setTimeout(() => setIsOpen(false), 300); // Wait for animation to finish before removing from DOM\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Small Image */}\r\n            <img \r\n                src={\"/osgl\" + src} \r\n                alt={alt} \r\n                className={`image-thumbnail ${className}`}\r\n                onClick={() => setIsOpen(true)}\r\n            />\r\n\r\n            {/* Fullscreen Lightbox */}\r\n            {isOpen && (\r\n                <div className={`image-overlay ${isVisible ? \"visible\" : \"\"}`} onClick={closeLightbox}>\r\n                    <div className={`image-container ${isVisible ? \"visible\" : \"\"}`} onClick={(e) => e.stopPropagation()}>\r\n                        {/* Close Button */}\r\n                        <button className=\"close-button\" onClick={closeLightbox}>✕</button>\r\n\r\n                        {/* Enlarged Image */}\r\n                        <img src={\"/osgl\" + src} alt={alt} className=\"enlarged-image\" />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageViewer;","import React from \"react\";\r\nimport TopbarButton from \"../../components/topbar-button\";\r\nimport TopbarOneWayButton from \"../../components/topbar-one-way-button\";\r\n\r\nconst DocTopbar = () => {\r\n    return <div className=\"topbar\" style={{height: \"55px\", position: \"fixed\" }}>\r\n        <TopbarOneWayButton name=\"logo\" link=\"/osgl\" />\r\n\r\n        <div className=\"docs-sig\">\r\n            <img\r\n                src=\"/osgl/docs-colour.png\"\r\n                alt=\"docs\"\r\n                className=\"docs-img\"\r\n            />\r\n        </div>\r\n\r\n        <img src=\"/osgl/logo-sep.png\" alt=\"Separator\" className=\"seperator-img\" style={{marginLeft: \"75px\"}} />\r\n\r\n        <TopbarButton name=\"api\" link=\"/osgl/api\" />\r\n        <TopbarButton name=\"github\" link=\"https://github.com/osgl-rbx/osgl/\" />\r\n    </div>\r\n}\r\n\r\nexport default DocTopbar;"],"names":["File","_jsxs","className","children","_jsx","DocTopbar","Sidebar","sections","sidebarInfo","CodeBlock","code","style","height","Footer","_ref","openSections","setOpenSections","useState","animationStates","setAnimationStates","currentPath","setCurrentPath","window","location","pathname","useEffect","handleLocationChange","addEventListener","removeEventListener","map","section","index","isSectionActive","startsWith","id","onClick","prev","setTimeout","toggleSection","title","color","transform","links","link","linkIndex","isLinkActive","href","animationDelay","text","language","filename","hljs","registerLanguage","require","copied","setCopied","codeRef","useRef","current","highlightElement","ref","copyToClipboard","navigator","clipboard","writeText","then","catch","err","console","error","src","alt","isOpen","setIsOpen","isVisible","setIsVisible","handleKeyDown","e","key","closeLightbox","document","_Fragment","stopPropagation","position","TopbarOneWayButton","name","marginLeft","TopbarButton"],"sourceRoot":""}