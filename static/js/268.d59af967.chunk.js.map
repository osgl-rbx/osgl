{"version":3,"file":"static/js/268.d59af967.chunk.js","mappings":"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","sources":["docs/components/sidebar.js","docs/components/codeblock.js","docs/components/image-viewer.js","docs/pages/textures/loading.js","docs/components/doc-topbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Sidebar = ({ sections }) => {\r\n  const [openSections, setOpenSections] = useState({});\r\n  const [animationStates, setAnimationStates] = useState({});\r\n  const [currentPath, setCurrentPath] = useState(\r\n    window.location.pathname + window.location.hash\r\n  );\r\n\r\n  // Initialize open sections and handle navigation\r\n  useEffect(() => {\r\n    // Find and open the active section on initial load\r\n    const initialOpenSections = {};\r\n    sections.forEach(section => {\r\n      if (section.links.some(link => \r\n        currentPath.startsWith(link.href) ||\r\n        currentPath.startsWith(`#/${section.id}`)\r\n      )) {\r\n        toggleSection(section.title);\r\n        initialOpenSections[section.title] = true;\r\n      }\r\n    });\r\n\r\n    setOpenSections(initialOpenSections);\r\n\r\n    const handleLocationChange = () => {\r\n      const newPath = window.location.pathname + window.location.hash;\r\n      setCurrentPath(newPath);\r\n    };\r\n\r\n    window.addEventListener('popstate', handleLocationChange);\r\n    return () => window.removeEventListener('popstate', handleLocationChange);\r\n  }, [sections]); // Only run once on mount and if sections change\r\n\r\n  const toggleSection = (section) => {\r\n    if (openSections[section]) {\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-out' }));\r\n      setTimeout(() => {\r\n        setOpenSections((prev) => ({ ...prev, [section]: false }));\r\n        setAnimationStates((prev) => ({ ...prev, [section]: '' }));\r\n      }, 300);\r\n    } else {\r\n      setOpenSections((prev) => ({ ...prev, [section]: true }));\r\n      setAnimationStates((prev) => ({ ...prev, [section]: 'fade-in' }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {sections.map((section, index) => {\r\n        const isSectionActive = \r\n          currentPath.startsWith(`#/${section.id}`) ||\r\n          section.links.some(link => currentPath.startsWith(link.href));\r\n        \r\n        return (\r\n          <div key={index} className=\"sidebar-section\">\r\n            <div \r\n              className=\"section-header\" \r\n              onClick={() => toggleSection(section.title)}\r\n            >\r\n              <span style={{ color: isSectionActive ? '#446EE4' : 'white' }}>\r\n                {section.title}\r\n              </span>\r\n              <span \r\n                className=\"toggle-icon\" \r\n                style={{ transform: openSections[section.title] ? 'rotate(90deg)' : 'rotate(0deg)' }}\r\n              >\r\n                â–¶\r\n              </span>\r\n            </div>\r\n\r\n            {openSections[section.title] && (\r\n              <div className={`sub-sections ${animationStates[section.title]}`}>\r\n                {section.links.map((link, linkIndex) => {\r\n                  const isLinkActive = currentPath === link.href;\r\n                  return (\r\n                    <a \r\n                      key={linkIndex} \r\n                      href={link.href} \r\n                      className=\"sub-section-link\"\r\n                      style={{ \r\n                        animationDelay: `${linkIndex * 0.1}s`,\r\n                        color: isLinkActive ? '#446EE4' : '#c2c7d6',\r\n                      }}\r\n                    >\r\n                      {link.text}\r\n                    </a>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport hljs from \"highlight.js\";\r\nimport \"highlight.js/styles/github-dark.css\";\r\nimport '../Docs.css'; // Import your CSS file\r\n\r\nconst CodeBlock = ({ code, language = \"lua\", filename }) => {\r\n    useEffect(() => {\r\n        hljs.registerLanguage('lua', require('highlight.js/lib/languages/lua'));\r\n    }, []);\r\n\r\n    const [copied, setCopied] = useState(false);\r\n    const codeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (codeRef.current) {\r\n            hljs.highlightElement(codeRef.current);\r\n        }\r\n    }, [code]);\r\n\r\n    const copyToClipboard = () => {\r\n        navigator.clipboard.writeText(code)\r\n            .then(() => {\r\n                setCopied(true);\r\n                setTimeout(() => setCopied(false), 1500);\r\n            })\r\n            .catch(err => console.error(\"Copy failed:\", err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"code-block-container\">\r\n            {filename && (\r\n                <div className=\"filename\">\r\n                    <p className=\"doc-paragraph\">{filename}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Code block */}\r\n            <pre className=\"code-block\">\r\n                <code ref={codeRef} className={`language-${language}`}>\r\n                    {code}\r\n                </code>\r\n            </pre>\r\n\r\n            {/* Copy button */}\r\n            <button \r\n                className={`copy-btn ${copied ? \"copied\" : \"\"}`}\r\n                onClick={copyToClipboard}\r\n            >\r\n                {copied ? \"Copied!\" : \"Copy\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeBlock;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ImageViewer = ({ src, alt = \"Image\", className = \"\" }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            // Delay adding \"visible\" class for fade-in effect\r\n            setTimeout(() => setIsVisible(true), 10);\r\n        } else {\r\n            // Start fade-out animation\r\n            setIsVisible(false);\r\n        }\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => {\r\n            if (e.key === \"Escape\") closeLightbox();\r\n        };\r\n        document.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, []);\r\n\r\n    const closeLightbox = () => {\r\n        setIsVisible(false); // Start fade-out animation\r\n        setTimeout(() => setIsOpen(false), 300); // Wait for animation to finish before removing from DOM\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* Small Image */}\r\n            <img \r\n                src={\"/osgl\" + src} \r\n                alt={alt} \r\n                className={`image-thumbnail ${className}`}\r\n                onClick={() => setIsOpen(true)}\r\n            />\r\n\r\n            {/* Fullscreen Lightbox */}\r\n            {isOpen && (\r\n                <div className={`image-overlay ${isVisible ? \"visible\" : \"\"}`} onClick={closeLightbox}>\r\n                    <div className={`image-container ${isVisible ? \"visible\" : \"\"}`} onClick={(e) => e.stopPropagation()}>\r\n                        {/* Close Button */}\r\n                        <button className=\"close-button\" onClick={closeLightbox}>âœ•</button>\r\n\r\n                        {/* Enlarged Image */}\r\n                        <img src={\"/osgl\" + src} alt={alt} className=\"enlarged-image\" />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageViewer;","// THIS FILE HAS BEEN AUTOMATICALLY GENERATED AND IS NOT INTENDED TO BE READ\r\nimport React from \"react\";\r\nimport '../../Docs.css';\r\nimport Footer from \"../../../components/footer\";\r\nimport DocTopbar from \"../../components/doc-topbar\";\r\nimport CodeBlock from \"../../components/codeblock\";\r\nimport ImageViewer from \"../../components/image-viewer\";\r\nimport Sidebar from \"../../components/sidebar\";\r\nimport '../../flavours/note.css';\r\nimport '../../flavours/warn.css';\r\nimport '../../flavours/important.css';\r\nimport sidebarInfo from \"../../sidebar-info\";\r\nimport \"../../../css/sidebar.css\";\r\nconst File = () => {\r\n  return (\r\n    <div className=\"Docs\">\r\n      <title>Docs | OSGL</title>\r\n      <DocTopbar />\r\n      \r\n      <div className=\"sidebar-content\">\r\n        <Sidebar sections={sidebarInfo} />\r\n      </div>\r\n      <div className=\"doc-content\">{/* This file was automatically-generated */}\r\n\r\n<h1 className=\"doc-header\">Loading Textures</h1>\r\n<div className=\"doc-header-line\"></div><p className=\"doc-paragraph\">To load file formats such as <code>PNGs</code>, <code>WebPs</code>, etc., OSGL uses its own external tool. The tool is bundled with OSGL on the github releases page, <a className=\"doc-paragraph\" href=\"https://github.com/osgl-rbx/osgl/releases/latest\">here</a>, named <code>image-converter</code> (previously converter). Pick the one for your OS. If you don't know which to pick, feel free to ask us! You can also get the Roblox plugin <a className=\"doc-paragraph\" href=\"https://create.roblox.com/store/asset/95733437839162\">here</a>, where you can upload smaller images (up to 111x111 or so) directly in studio.</p><div class=\"note\"><div class=\"note-title\">NOTE</div><div class=\"note-body\">You can get help with the<code> image-converter</code> exe by running it in the command prompt with the <code>-h</code> flag, e.g: <code>&gt; image-converter -h</code><br></br></div></div><p className=\"doc-paragraph\">You can load textures into OSGL with the <code>Texture.fromChecked</code> / <code>Texture.fromUnchecked</code> functions, which takes the texture generated by the image-converter:</p><CodeBlock code={`local OSGL = require(path.to.osgl)\r\nlocal Texture = OSGL.Texture\r\nâ€‹\r\nlocal txt = Texture.fromChecked(script.ModuleThatReturnsTexture):Unwrap()\r\n-- \"txt\" now contains OSGL-Texture data`}></CodeBlock><div class=\"note\"><div class=\"note-title\">NOTE</div><div class=\"note-body\">A<code> Texture</code> is a <code>DrawableObject</code>, like a <code>Window</code>, meaning it can only be drawn too. You can edit a <code>Texture</code> like any other <code>Window</code>. This is because both belong to the super-class <code>DrawableObject</code>. This means anything you can draw to a <code>Window</code>, can also be drawn to a <code>Texture</code>. Or, in other words, a <code>Window</code> is also a <code>Texture</code>.</div></div><div class=\"warn\"><div class=\"warn-title\">WARNING</div><div class=\"warn-body\">Textures are expensive to load into memory! Once loaded however, they can be used everywhere. Always keep in mind some devices may not be able to load large textures. Textures, can, however, be loaded extremely fast, meaning you can load them in quick succession.</div></div>\r\n      <div style={{ height: \"55px\" }} />\r\n</div>\r\n      <Footer />\r\n      <div className=\"grid-background-dark\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default File;","import React from \"react\";\r\nimport TopbarButton from \"../../components/topbar-button\";\r\nimport TopbarOneWayButton from \"../../components/topbar-one-way-button\";\r\n\r\nconst DocTopbar = () => {\r\n    return <div className=\"topbar\" style={{height: \"55px\", position: \"fixed\" }}>\r\n        <TopbarOneWayButton name=\"logo\" link=\"/osgl\" />\r\n\r\n        <div className=\"docs-sig\">\r\n            <img\r\n                src=\"/osgl/docs-colour.png\"\r\n                alt=\"docs\"\r\n                className=\"docs-img\"\r\n            />\r\n        </div>\r\n\r\n        <img src=\"/osgl/logo-sep.png\" alt=\"Separator\" className=\"seperator-img\" style={{marginLeft: \"75px\"}} />\r\n\r\n        <TopbarButton name=\"api\" link=\"/osgl/#/api\" />\r\n        <TopbarButton name=\"github\" link=\"https://github.com/osgl-rbx/osgl/\" />\r\n    </div>\r\n}\r\n\r\nexport default DocTopbar;"],"names":["_ref","sections","openSections","setOpenSections","useState","animationStates","setAnimationStates","currentPath","setCurrentPath","window","location","pathname","hash","useEffect","initialOpenSections","forEach","section","links","some","link","startsWith","href","id","toggleSection","title","handleLocationChange","newPath","addEventListener","removeEventListener","prev","setTimeout","_jsx","className","children","map","index","isSectionActive","_jsxs","onClick","style","color","transform","linkIndex","isLinkActive","animationDelay","text","code","language","filename","hljs","registerLanguage","require","copied","setCopied","codeRef","useRef","current","highlightElement","ref","copyToClipboard","navigator","clipboard","writeText","then","catch","err","console","error","src","alt","isOpen","setIsOpen","isVisible","setIsVisible","handleKeyDown","e","key","closeLightbox","document","_Fragment","stopPropagation","File","DocTopbar","Sidebar","sidebarInfo","class","CodeBlock","height","Footer","position","TopbarOneWayButton","name","marginLeft","TopbarButton"],"sourceRoot":""}